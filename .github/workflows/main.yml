name: CI/CD Laravel - Backend Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Install PHP setup
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo_pgsql, mbstring
          coverage: none

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Install Node dependencies
        run: yarn install

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Install PHP setup
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo_pgsql
          coverage: none

      - name: Creating database with docker
        run: |
          docker run -d \
            --name mysql \
            -p 5432:5432 \
            -e MYSQL_USER=${{ secrets.DB_USER }} \
            -e MYSQL_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e MYSQL_DATABASE=${{ secrets.DB_DATABASE }} \
            mysql:8

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Install Node dependencies
        run: yarn install

      - name: Build assets
        run: yarn build

      - name: Set environment and run migrations
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan migrate --force
        env:
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Run tests
        run: php artisan test

  build:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: DockerHub login
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.APPLICATION_NAME }}:production .

      - name: Tag and push image
        run: |
          docker tag ${{ secrets.APPLICATION_NAME }}:production ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APPLICATION_NAME }}:production
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APPLICATION_NAME }}:production

          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          docker tag ${{ secrets.APPLICATION_NAME }}:production ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APPLICATION_NAME }}:$SHORT_SHA
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APPLICATION_NAME }}:$SHORT_SHA
